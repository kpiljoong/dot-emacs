#+TITLE: hkk :: ocaml

#+begin_src elisp

  (use-package merlin
      :ensure t
      :defer t
      :init
      (progn
        (add-hook 'tuareg-mode-hook 'merlin-mode)
        (set-default 'merlin-use-auto-complete-mode nil)
        (setq merlin-complete-with-doc t)
        (with-eval-after-load 'company
          (add-to-list 'company-backends 'merlin-company-backend))
        (add-hook 'merlin-mode-hook 'company-mode)))

    (use-package ocp-indent
      :ensure t
      :defer t
      :init
      (add-hook 'tuareg-mode-hook 'ocp-indent-caml-mode-setup))

    (with-eval-after-load 'smartparens
      (sp-local-pair 'tuareg-mode "'" nil :actions nil)
      (sp-local-pair 'tuareg-mode "`" nil :actions nil))

    (use-package tuareg
      :ensure t
      :defer t
      :init
      (progn
        (dolist (ext '(".cmo" ".cmx" ".cma" ".cmxa" ".cmi" ".cmxs" ".cmt" ".annot"))
          (add-to-list 'completion-ignored-extensions ext))))

    (use-package utop
      :ensure t
      :defer t
      :init (add-hook 'tuareg-mode-hook 'utop-minor-mode)
      :config
      (progn
        (if (executable-find "opam")
            (let ((vars (car (read-from-string
                              (shell-command-to-string "opam config env --sexp")))))
              (dolist (var vars)
                (setenv (car var) (cadr var)))))
        (setq exec-path (append (parse-colon-path (getenv "PATH"))
                                (list exec-directory)))
        (define-key utop-mode-map (kbd "C-j") 'utop-history-goto-next)
        (define-key utop-mode-map (kbd "C-k") 'utop-history-goto-prev)))


  (let ((opam-share (ignore-errors (car (process-lines "opam" "config" "var" "share")))))
   (when (and opam-share (file-directory-p opam-share))
    (add-to-list 'load-path (expand-file-name "emacs/site-lisp" opam-share))
    (autoload 'merlin-mode "merlin" nil t nil)
    (add-hook 'tuareg-mode-hook 'merlin-mode t)
    (add-hook 'caml-mode-hook 'merlin-mode t)))


  ;; Add opam emacs directory to the load-path
  (setq opam-share (substring (shell-command-to-string "opam config var share 2> /dev/null") 0 nil))
  (add-to-list 'load-path (concat opam-share "/emacs/site-lisp"))
  ;; Use opam switch to lookup ocamlmerlin binary
  (setq merlin-command 'opam)

    (provide 'hkk-ocaml)
#+end_src

#+PROPERTY: tangle ~/.emacs.d/hkk/hkk-ocaml.el
